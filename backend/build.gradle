buildscript {    // Configuration for building
	repositories {
		jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "io.freefair.lombok" version "5.0.0-rc4"
	id 'java'
}

springBoot {
	mainClassName = 'com.tl.backend.BackendApplication'
}

repositories {
	mavenCentral()
}

group = 'com.tl'
version = '1.0-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

apply plugin: 'com.google.cloud.tools.appengine'

dependencies {
	compile 'io.jsonwebtoken:jjwt-api:0.10.7'
	runtime 'io.jsonwebtoken:jjwt-impl:0.10.7',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			//'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.10.7'

	//mapstruct
	compile 'org.mapstruct:mapstruct:1.3.1.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compile 'com.google.cloud:google-cloud-storage:1.111.2'

	// https://mvnrepository.com/artifact/com.stripe/stripe-java
	compile group: 'com.stripe', name: 'stripe-java', version: '19.23.0'

	compile 'org.springframework.boot:spring-boot-starter-mail:2.3.1.RELEASE'
	compile 'com.maxmind.geoip2:geoip2:2.14.0'
	implementation 'com.github.ua-parser:uap-java:1.4.3'

	compile 'com.google.appengine:appengine-api-1.0-sdk:+'
	compile 'com.google.cloud:google-cloud:+'

	// spring content && spring content rest
	compile group: 'com.github.paulcwarren', name: 'spring-content-fs-boot-starter', version: '1.0.0.M10'
	compile group: 'com.github.paulcwarren', name: 'spring-content-rest-boot-starter', version: '1.0.0.M10'

	testCompile 'junit:junit:4.12'
	testCompile 'com.google.appengine:appengine-testing:+'
	testCompile 'com.google.appengine:appengine-api-stubs:+'
	testCompile 'com.google.appengine:appengine-tools-sdk:+'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnit()
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle("test: " + descriptor + "  Running")
	}

	onOutput { descriptor, event ->
		logger.lifecycle("test: " + descriptor + ": " + event.message )
	}
	afterTest { descriptor, result ->
		logger.lifecycle("test: " + descriptor + ": " + result )
	}
}

appengineDeploy.dependsOn test
appengineStage.dependsOn test

appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = 'tline-283413'
		version = '1'
	}
}